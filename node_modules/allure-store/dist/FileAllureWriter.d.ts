import type { AllureWriter } from './AllureWriter';
import type { CategoryInput, Container, ExecutorInfo, Result } from './types';
import type { OnErrorHandler } from './errors';
export interface FileSystemAllureWriterConfig {
    overwrite?: boolean;
    resultsDirectory: string;
    onError?: OnErrorHandler;
}
export declare class FileAllureWriter implements AllureWriter {
    #private;
    constructor(config: FileSystemAllureWriterConfig);
    init(): Promise<void>;
    writeCategories(categories: CategoryInput[]): Promise<void>;
    writeContainer(container: Container): Promise<void>;
    writeEnvironmentInfo(info: Record<string, unknown>): Promise<void>;
    writeExecutorInfo(info: ExecutorInfo): Promise<void>;
    writeResult(result: Result): Promise<void>;
}
//# sourceMappingURL=FileAllureWriter.d.ts.map