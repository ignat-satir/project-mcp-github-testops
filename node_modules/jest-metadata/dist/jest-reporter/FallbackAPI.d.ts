import type { TestCaseResult } from '@jest/reporters';
import type { GlobalMetadata, MetadataEventEmitter, TestFileMetadata, TestEntryMetadata } from '../metadata';
export type TestCaseResultArg = Pick<TestCaseResult, 'status' | 'title' | 'ancestorTitles' | 'invocations'>;
export type TestFileResultArg = {
    testFilePath: string;
    testResults: TestCaseResultArg[];
};
export type AggregatedResultArg = {
    testResults: TestFileResultArg[];
};
export declare class FallbackAPI {
    private readonly globalMetadata;
    private readonly eventEmitter;
    private _fallbackModes;
    private _cache;
    private _testEntryCounter;
    private _log;
    constructor(globalMetadata: GlobalMetadata, eventEmitter: MetadataEventEmitter);
    get enabled(): any;
    reportTestFile(testFilePath: string): TestFileMetadata;
    reportTestCase(testFilePath: string, testCaseResult: TestCaseResultArg): TestEntryMetadata;
    reportTestFileResult(testFileResult: TestFileResultArg): TestEntryMetadata[];
    private _getNameIdentifier;
    private _getCompletionEventType;
    private _incrementTestEntryIndex;
    private _determineFallbackModeStatus;
}
