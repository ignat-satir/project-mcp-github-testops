import type { Emitter, ReadonlyEmitter } from '../../types';
export declare class AggregatedEmitter<Event extends {
    type: string;
}> implements ReadonlyEmitter<Event> {
    #private;
    constructor(name: string);
    add(emitter: Emitter<Event>): this;
    on(type: Event['type'] | '*', listener: (event: Event) => unknown): this;
    once(type: Event['type'] | '*', listener: (event: Event) => unknown): this;
    off(type: Event['type'] | '*', listener: (event: Event) => unknown): this;
}
