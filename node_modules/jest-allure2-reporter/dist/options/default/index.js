"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultOptions = defaultOptions;
const tslib_1 = require("tslib");
const allure_store_1 = require("allure-store");
const logger_1 = require("../../logger");
const sourceCode = tslib_1.__importStar(require("../../source-code"));
const common = tslib_1.__importStar(require("../common"));
const custom = tslib_1.__importStar(require("../custom"));
const helpers = tslib_1.__importStar(require("../helpers"));
const categories_1 = require("./categories");
const testRun_1 = require("./testRun");
const testFile_1 = require("./testFile");
const testCase_1 = require("./testCase");
const testStep_1 = require("./testStep");
function defaultOptions() {
    return {
        overwrite: true,
        resultsDir: 'allure-results',
        injectGlobals: true,
        attachments: {
            subDir: 'attachments',
            contentHandler: 'write',
            fileHandler: 'ref',
        },
        sourceCode: custom.sourceCode({
            enabled: true,
            plugins: sourceCode,
        }),
        helpers: custom.helpers(helpers),
        testRun: custom.testCase(testRun_1.testRun),
        testFile: custom.testCase(testFile_1.testFile),
        testCase: custom.testCase(testCase_1.testCase),
        testStep: custom.testStep(testStep_1.testStep),
        categories: common.constant(categories_1.categories),
        environment: () => ({}),
        executor: () => ({}),
        writer: (config) => new allure_store_1.FileAllureWriter({
            resultsDirectory: config.resultsDir,
            overwrite: config.overwrite,
            onError: (error) => logger_1.log.error(error, 'Caught an error in FileAllureWriter'),
        }),
    };
}
//# sourceMappingURL=index.js.map