import type { AllureReader } from './AllureReader';
import type { Category, Container, ExecutorInfo, Result } from './types';
import { type OnErrorHandler } from './errors';
export interface FileAllureReaderConfig {
    resultsDirectory: string;
    onError?: OnErrorHandler;
}
export declare class FileAllureReader implements AllureReader {
    #private;
    constructor(config: FileAllureReaderConfig);
    getContainerIds(): Promise<string[]>;
    getResultIds(): Promise<string[]>;
    readResult(id: string): Promise<Result | null>;
    readContainer(id: string): Promise<Container | null>;
    readCategories(): Promise<Category[] | null>;
    readEnvironmentInfo(): Promise<Record<string, string> | null>;
    readExecutorInfo(): Promise<ExecutorInfo | null>;
}
//# sourceMappingURL=FileAllureReader.d.ts.map