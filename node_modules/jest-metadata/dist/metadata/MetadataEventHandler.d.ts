import type { GlobalMetadata } from './containers';
import type { MetadataEvent } from './events';
import { AggregatedIdentifier } from './ids';
import type { FileMetadataRegistry } from './registry';
export type MetadataEventHandlerConfig = {
    readonly globalMetadata: GlobalMetadata;
    readonly metadataRegistry: FileMetadataRegistry<AggregatedIdentifier>;
};
export declare class MetadataEventHandler {
    protected readonly config: MetadataEventHandlerConfig;
    private readonly _metadata;
    private readonly _metadataRegistry;
    private readonly _handlers;
    constructor(config: MetadataEventHandlerConfig);
    handle: (event: MetadataEvent) => void;
    backToDescribe: (testFilePath: string) => void;
}
