import type { AggregatedResult, Config, Reporter, ReporterOnStartOptions, Test, TestCaseResult, TestContext, TestResult } from '@jest/reporters';
export declare const query: import("./jest-reporter").QueryMetadata;
/**
 * @implements {import('@jest/reporters').Reporter}
 */
export declare class JestMetadataReporter implements Reporter {
    static readonly query: import("./jest-reporter").QueryMetadata;
    constructor(_globalConfig: Config.GlobalConfig);
    static get JestMetadataReporter(): typeof JestMetadataReporter;
    getLastError(): Error | void;
    onRunStart(_results: AggregatedResult, _options: ReporterOnStartOptions): Promise<void>;
    /**
     * @deprecated
     */
    onTestStart(_test: Test): void;
    onTestFileStart(test: Test): void;
    /**
     * NEW! Supported only since Jest 29.6.0
     * @see {import('@jest/types').Circus.TestCaseStartInfo}
     */
    onTestCaseStart(test: Test, testCaseStartInfo: unknown): void;
    onTestCaseResult(test: Test, testCaseResult: TestCaseResult): void;
    /**
     * @deprecated
     */
    onTestResult(_test: Test, _testResult: TestResult, _aggregatedResult: AggregatedResult): void;
    onTestFileResult(test: Test, testResult: TestResult, _aggregatedResult: AggregatedResult): void;
    onRunComplete(_testContexts: Set<TestContext>, _aggregatedResult: AggregatedResult): Promise<void>;
}
export default JestMetadataReporter;
